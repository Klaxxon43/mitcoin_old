from utils.Imports import *
from utils.kb import *

admin = Router()

@admin.callback_query(F.data == 'admin_back')
async def back_to_admin_menu(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üë®‚Äçüíª <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>",
        reply_markup=admin_kb()
    )
    await callback.answer()

@admin.callback_query(F.data == 'admin_kb2')
async def admin_kb2_handler(callback: types.CallbackQuery):
    if callback.from_user.id in ADMINS_ID:  
        await callback.message.edit_text('üë®‚Äçüíª <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>', reply_markup=admin_kb2())
        await callback.answer() 

@admin.callback_query(F.data == 'admin_kb')
async def admin_kb_handler(callback: types.CallbackQuery):
    if callback.from_user.id in ADMINS_ID:  
        await callback.message.edit_text('üë®‚Äçüíª <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>', reply_markup=admin_kb())
        await callback.answer()  

@admin.message(Command('admin'))
async def admin_cmd(message: types.Message):
    if message.from_user.id in ADMINS_ID:
        await message.answer('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', reply_markup=admin_kb())

@admin.callback_query(F.data == 'sum_deposit')
async def view_user_profile_handler(callback: types.CallbackQuery, state: FSMContext):
    all_deps = await DB.get_total_deposits()
    await callback.message.answer(f'—Å—É–º–º–∞ –≤—Å–µ—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π - {all_deps} usdt')


# @admin.message(Command('premiumusers'))
# async def premium_users_handler(message: types.Message):
#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
#     sent_message = await message.answer('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å! –û–∂–∏–¥–∞–π—Ç–µ...')
    
#     premium_users = 0
#     all_users = await DB.get_all_users()
#     total_users = len(all_users)
#     count = 0

#     # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
#     for user in all_users:
#         count += 1
#         user_id = user[1]  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ user_id –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –∏–Ω–¥–µ–∫—Å–µ 1

#         try:
#             # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram Premium
#             from client import check_premium
#             prem = await check_premium(user_id)

#             if prem:
#                 premium_users += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–º–∏—É–º

#             # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —à–∞–≥–µ
#             if count % 10 == 0 or count == total_users:
#                 await sent_message.edit_text(
#                     f'–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å! –û–∂–∏–¥–∞–π—Ç–µ...\n'
#                     f'–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {count} –∏–∑ {total_users}\n'
#                     f'–ù–∞–π–¥–µ–Ω–æ Premium –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {premium_users}'
#                 )
#         except Exception as e:
#             # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π user_id), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#             print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
#             continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
#     await sent_message.edit_text(
#         f'–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω!\n'
#         f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n'
#         f'Premium –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {premium_users}'
#     ) 